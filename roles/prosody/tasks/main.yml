---

- name: Install prosody XMPP server.
  apt:
    name: prosody
    state: installed
    update_cache: yes
  with_items: prosody_pkgs
  become: true

- name: Configure prosody.
  template:
    src: prosody.cfg.lua.j2
    dest: /etc/prosody/prosody.cfg.lua
    owner: root
    group: prosody
    mode: u=rw,g=r,o=r
  become: true

- name: Create MySQL database for prosody.
  mysql_db:
    name: prosody
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"
  become: true

- name: Add MySQL user for prosody.
  mysql_user:
    user: "prosody"
    password: "{{ prosody_mysql_password }}"
    host: "localhost"
    priv: "prosody.*:ALL"
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"
  become: true

- name: Register server certificate.
  stat: path=/etc/prosody/certs/{{ prosody_domain }}.crt
  register: prosody_certificate
  become: true

- name: Generate RSA key
  command: openssl genrsa -out {{ssl_certs_privkey_path}} {{ ssl_certs_key_size }}
  args:
    creates: "{{ssl_certs_privkey_path}}"
  become: true

- name: Generate CSR
  command: openssl req -new -subj '{{ssl_certs_fields}}' -key {{ssl_certs_privkey_path}} -out {{ssl_certs_csr_path}}
  args:
    creates: "{{ssl_certs_csr_path}}"
  become: true

- name: Generate self-signed SSL certificate
  command: openssl req -nodes -x509 -days {{ssl_certs_days}} -in {{ssl_certs_csr_path}} -key {{ssl_certs_privkey_path}} -out {{ssl_certs_cert_path}} -extensions v3_ca
  args:
    creates: "{{ssl_certs_cert_path}}"
  become: true

- name: Get iptables rules.
  shell: iptables -L
  register: iptablesrules
  always_run: yes
  become: true

- name: Add prosody non ssl c2s iptables rule.
  command: /sbin/iptables -I INPUT 1 -p tcp --dport "{{ prosody_nonssl_port }}" -j ACCEPT -m comment --comment "prosody_nonssl_c2s"
  notify: save iptables
  become: true
  when: iptablesrules.stdout.find("{{ prosody_nonssl_port }}") == -1

- name: Add prosody ssl c2s iptables rule.
  command: /sbin/iptables -I INPUT 1 -p tcp --dport "{{ prosody_ssl_port }}" -j ACCEPT -m comment --comment "prosody_ssl_c2s"
  notify: save iptables
  become: true
  when: iptablesrules.stdout.find("{{ prosody_ssl_port }}") == -1

- name: Create prosody users.
  command:  prosodyctl register {{ item.value.name }} {{ item.value.domain }} {{ item.value.password }}
  with_dict: prosody_users
  become: true
